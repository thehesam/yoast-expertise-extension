<?php
/*
Plugin Name: Yoast Expertise Extension
Plugin URI: https://www.linkedin.com/in/seyedhesamhosseini/
Description: The Yoast Expertise Extension is a cool tool designed to optimize the schema generated by Yoast SEO, making it more EEAT friendly.
Version: 1.0
Author: Hesam Hosseini
Author URI: https://www.linkedin.com/in/seyedhesamhosseini/
*/

///////////////posts
// Add the custom meta box to the post edit screen
function yoast_eeat_add_meta_box() {
    add_meta_box(
        'yoast-eeat-meta-box',
        'EEAT',
        'yoast_eeat_render_meta_box',
        'post',
        'normal',
        'default'
    );
}
add_action('add_meta_boxes', 'yoast_eeat_add_meta_box');

// Render the content of the custom meta box
function yoast_eeat_render_meta_box($post) {
    // Retrieve the current values of the custom fields, if they exist
    $eeat_editor = get_post_meta($post->ID, 'eeat_editor', true);
    $eeat_factchecker = get_post_meta($post->ID, 'eeat_factchecker', true);
    $eeat_graphist = get_post_meta($post->ID, 'eeat_graphist', true);
    $eeat_sources = get_post_meta($post->ID, 'eeat_sources', true);

    // Get all WordPress users
    $users = get_users();

    // Output the custom fields HTML markup with dropdown fields
    ?>    
    <table>
        <tr>
            <td><label for="eeat_editor">Editor:</label></td>
            <td>
                <select name="eeat_editor" id="eeat_editor">
                    <option value="">Select an editor</option>
                    <?php
                    foreach ($users as $user) {
                        $selected = ($eeat_editor == $user->ID) ? 'selected' : '';
                        echo '<option value="' . $user->ID . '" ' . $selected . '>' . $user->display_name . '</option>';
                    }
                    ?>
                </select>
            </td>
        </tr>
        <tr>
            <td><label for="eeat_factchecker">Fact Checker:</label></td>
            <td>
                <select name="eeat_factchecker" id="eeat_factchecker">
                    <option value="">Select a fact checker</option>
                    <?php
                    foreach ($users as $user) {
                        $selected = ($eeat_factchecker == $user->ID) ? 'selected' : '';
                        echo '<option value="' . $user->ID . '" ' . $selected . '>' . $user->display_name . '</option>';
                    }
                    ?>
                </select>
            </td>
        </tr>
        <tr>
            <td><label for="eeat_graphist">Graphist:</label></td>
            <td>
                <select name="eeat_graphist" id="eeat_graphist">
                    <option value="">Select a graphist</option>
                    <?php
                    foreach ($users as $user) {
                        $selected = ($eeat_graphist == $user->ID) ? 'selected' : '';
                        echo '<option value="' . $user->ID . '" ' . $selected . '>' . $user->display_name . '</option>';
                    }
                    ?>
                </select>
            </td>
        </tr>
        <tr>
            <td><label for="eeat_sources">Sources:</label></td>
            <td>
                <textarea name="eeat_sources" id="eeat_sources" rows="4" cols="50"><?php echo esc_textarea($eeat_sources); ?></textarea>
                <p class="description">Enter the sources for the article. each source in one line.</p>
            </td>
        </tr>

    </table>
    <?php
}


// Save the custom field values when the post is saved or updated
function yoast_eeat_save_meta_data($post_id) {
    if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) {
        return;
    }

    if (!current_user_can('edit_post', $post_id)) {
        return;
    }

    if (isset($_POST['eeat_editor'])) {
        update_post_meta($post_id, 'eeat_editor', intval($_POST['eeat_editor']));
    }

    if (isset($_POST['eeat_factchecker'])) {
        update_post_meta($post_id, 'eeat_factchecker', intval($_POST['eeat_factchecker']));
    }

    if (isset($_POST['eeat_graphist'])) {
        update_post_meta($post_id, 'eeat_graphist', intval($_POST['eeat_graphist']));
    }

    if (isset($_POST['eeat_sources'])) {
        update_post_meta($post_id, 'eeat_sources', sanitize_textarea_field($_POST['eeat_sources']));
    }
}

add_action('save_post', 'yoast_eeat_save_meta_data');



///////////////users
// Create custom fields in the user edit pages
function yoast_eeat_add_user_edit_fields($user) {
    ?>
    <h3>EEAT User Fields</h3>
    <table class="form-table">
        <tr>
            <th><label for="eeat_linkedin">LinkedIn</label></th>
            <td>
                <input type="text" name="eeat_linkedin" id="eeat_linkedin" value="<?php echo esc_attr(get_user_meta($user->ID, 'eeat_linkedin', true)); ?>" class="regular-text" />
                <p class="description">Enter the user's LinkedIn profile URL.</p>
            </td>
        </tr>
        <tr>
            <th><label for="eeat_twitter">Twitter</label></th>
            <td>
                <input type="text" name="eeat_twitter" id="eeat_twitter" value="<?php echo esc_attr(get_user_meta($user->ID, 'eeat_twitter', true)); ?>" class="regular-text" />
                <p class="description">Enter the user's Twitter handle.</p>
            </td>
        </tr>
        <tr>
            <th><label for="eeat_instagram">Instagram</label></th>
            <td>
                <input type="text" name="eeat_instagram" id="eeat_instagram" value="<?php echo esc_attr(get_user_meta($user->ID, 'eeat_instagram', true)); ?>" class="regular-text" />
                <p class="description">Enter the user's Instagram username.</p>
            </td>
        </tr>
        <tr>
            <th><label for="eeat_expertise">Expertise</label></th>
            <td>
                <input type="text" name="eeat_expertise" id="eeat_expertise" value="<?php echo esc_attr(get_user_meta($user->ID, 'eeat_expertise', true)); ?>" class="regular-text" />
                <p class="description">Enter the user's expertise.</p>
            </td>
        </tr>
        <tr>
            <th><label for="eeat_education">Education</label></th>
            <td>
                <input type="text" name="eeat_education" id="eeat_education" value="<?php echo esc_attr(get_user_meta($user->ID, 'eeat_education', true)); ?>" class="regular-text" />
                <p class="description">Enter the user's education details.</p>
            </td>
        </tr>
        <tr>
            <th><label for="eeat_youtube">YouTube</label></th>
            <td>
                <input type="text" name="eeat_youtube" id="eeat_youtube" value="<?php echo esc_attr(get_user_meta($user->ID, 'eeat_youtube', true)); ?>" class="regular-text" />
                <p class="description">Enter the user's YouTube channel URL.</p>
            </td>
        </tr>
        <tr>
            <th><label for="eeat_wikipedia">Wikipedia</label></th>
            <td>
                <input type="text" name="eeat_wikipedia" id="eeat_wikipedia" value="<?php echo esc_attr(get_user_meta($user->ID, 'eeat_wikipedia', true)); ?>" class="regular-text" />
                <p class="description">Enter the user's Wikipedia page URL.</p>
            </td>
        </tr>
        <tr>
            <th><label for="eeat_medium">Medium</label></th>
            <td>
                <input type="text" name="eeat_medium" id="eeat_medium" value="<?php echo esc_attr(get_user_meta($user->ID, 'eeat_medium', true)); ?>" class="regular-text" />
                <p class="description">Enter the user's Medium profile URL.</p>
            </td>
        </tr>
    </table>
    <?php
}
add_action('edit_user_profile', 'yoast_eeat_add_user_edit_fields');
add_action('show_user_profile', 'yoast_eeat_add_user_edit_fields');




///////////////schema
function change_schema_person( $schema ) {
  $author_id = get_the_author_meta( 'ID' );
  $knows_about = get_the_author_meta( 'eeat_expertise', $author_id );
  $alumni_of = get_the_author_meta( 'eeat_education', $author_id );

  // Enclose knowsAbout value within brackets if it exists
  if ( ! empty( $knows_about ) ) {
      $schema['knowsAbout'] = array_map( 'trim', explode( ',', $knows_about ) );

  }

  // Format alumniOf property as an array of organizations if it exists
  if ( ! empty( $alumni_of ) ) {
      $alumni_of_data = array(
          '@type' => 'Organization',
          'Name' => $alumni_of
      );
      $schema['alumniOf'] = array( $alumni_of_data );
  }

  // Add social links to sameAs array if they exist
  $same_as = array();
  $twitter_url = get_the_author_meta( 'eeat_twitterl', $author_id );
  $youtube_url = get_the_author_meta( 'eeat_youtube', $author_id );
  $linkedin_url = get_the_author_meta( 'eeat_linkedin', $author_id );
  $instagram_url = get_the_author_meta( 'eeat_instagram', $author_id );
  $medium_url = get_the_author_meta( 'eeat_medium', $author_id );

  if ( ! empty( $twitter_url ) ) {
      $same_as[] = $twitter_url;
  }
  if ( ! empty( $youtube_url ) ) {
      $same_as[] = $youtube_url;
  }
  if ( ! empty( $linkedin_url ) ) {
      $same_as[] = $linkedin_url;
  }
  if ( ! empty( $instagram_url ) ) {
      $same_as[] = $instagram_url;
  }
  if ( ! empty( $medium_url ) ) {
      $same_as[] = $medium_url;
  }

  if ( ! empty( $same_as ) ) {
      $schema['sameAs'] = $same_as;
  }

  return $schema;
}
add_filter( 'wpseo_schema_person', 'change_schema_person' );


function add_editor_to_article_schema($data) {
    $post_id = get_the_ID(); // Get the current post ID
    //editors fetch
    $editor_id = get_post_meta($post_id, 'eeat_editor', true);
    $editor_twitter_url = get_the_author_meta('eeat_twitter', $editor_id);
    $editor_linkedin_url = get_the_author_meta('eeat_linkedin', $editor_id);
    $editor_youtube_url = get_the_author_meta('eeat_youtube', $editor_id);
    $editor_instagram_url = get_the_author_meta('eeat_instagram', $editor_id);
    $editor_medium_url = get_the_author_meta('eeat_medium', $editor_id);
    $editor_meta = get_user_meta($editor_id);
    $editor_name = get_the_author_meta('display_name', $editor_id);
    $editor_url = get_author_posts_url($editor_id);
    $editor_knows_about = get_the_author_meta('eeat_expertise', $editor_id);
    $editor_alumni_of = get_the_author_meta('eeat_education', $editor_id);
  
    $eurls = array();
    if (!empty($editor_twitter_url)) {
        $eurls[] = $editor_twitter_url;
    }
    if (!empty($editor_youtube_url)) {
        $eurls[] = $editor_youtube_url;
    }
    if (!empty($editor_linkedin_url)) {
        $eurls[] = $editor_linkedin_url;
    }
    if (!empty($editor_instagram_url)) {
        $eurls[] = $editor_instagram_url;
    }
    if (!empty($editor_medium_url)) {
        $eurls[] = $editor_medium_url;
    }
  
    if ($editor_id) {
        $editor_schema = array(
            '@type' => 'Person',
            'name' => $editor_name,
            'url' => $editor_url,
            'image' => get_avatar_url($editor_id, array('size' => 300))
        );
        if ( ! empty( $eurls ) ) {
            $editor_schema['sameAs'] = $eurls;
        }
        if(!empty($editor_knows_about)){
            $editor_schema['knowsAbout'] = array_map( 'trim', explode( ',', $editor_knows_about ) );
        }
        if (!empty($editor_alumni_of)) {
            $editor_schema['alumniOf'] = array(
                array(
                    '@type' => 'Organization',
                    'name' => $editor_alumni_of
                )
            );
        }
  
        $data['editor'] = $editor_schema;
    }
  return $data;
}
add_filter('wpseo_schema_article', 'add_editor_to_article_schema');

function add_factchecker_to_article_schema($data) {
    $post_id = get_the_ID(); // Get the current post ID
    //factcheckers fetch
    $factchecker_id = get_post_meta($post_id, 'eeat_factchecker', true);
    $factchecker_twitter_url = get_the_author_meta('eeat_twitter', $factcheckerr_id);
    $factchecker_linkedin_url = get_the_author_meta('eeat_linkedin', $factchecker_id);
    $factchecker_youtube_url = get_the_author_meta('eeat_youtube', $factchecker_id);
    $factchecker_instagram_url = get_the_author_meta('eeat_instagram', $factchecker_id);
    $factchecker_medium_url = get_the_author_meta('eeat_medium', $factchecker_id);
    $factchecker_meta = get_user_meta($factchecker_id);
    $factchecker_name = get_the_author_meta('display_name', $factchecker_id);
    $factchecker_url = get_author_posts_url($factchecker_id);
    $factchecker_knows_about = get_the_author_meta('eeat_expertise', $factchecker_id);
    $factchecker_alumni_of = get_the_author_meta('eeat_education', $factchecker_id);
  
    $furls = array();
    if (!empty($factchecker_twitter_url)) {
        $furls[] = $factchecker_twitter_url;
    }
    if (!empty($factchecker_youtube_url)) {
        $furls[] = $factchecker_youtube_url;
    }
    if (!empty($factchecker_linkedin_url)) {
        $furls[] = $factchecker_linkedin_url;
    }
    if (!empty($factchecker_instagram_url)) {
        $furls[] = $factchecker_instagram_url;
    }
    if (!empty($factchecker_medium_url)) {
        $furls[] = $factchecker_medium_url;
    }
  
    if ($factchecker_id) {
        $factchecker_schema = array(
            '@type' => 'Person',
            'name' => $factchecker_name,
            'url' => $factchecker_url,
            'image' => get_avatar_url($factchecker_id, array('size' => 300))
        );
        if ( ! empty( $furls ) ) {
            $factchecker_schema['sameAs'] = $furls;
        }
        if(!empty($factchecker_knows_about)){
            $factchecker_schema['knowsAbout'] = array_map( 'trim', explode( ',', $factchecker_knows_about ) );
        }
        if (!empty($factchecker_alumni_of)) {
            $factchecker_schema['alumniOf'] = array(
                array(
                    '@type' => 'Organization',
                    'name' => $factchecker_alumni_of
                )
            );
        }
  
        $data['reviewedBy'] = $factchecker_schema;
    }
  return $data;
}
add_filter('wpseo_schema_article', 'add_factchecker_to_article_schema');

function add_citation_to_article_schema($data) {
    $post_id = get_the_ID(); // Get the current post ID
    $sources = get_post_meta($post_id, 'eeat_sources', true);
    
    if (!empty($sources)) {
        $sources = explode("\n", $sources);
        $data['citation'] = array_map('trim', $sources);
    }
    
    return $data;
}
add_filter('wpseo_schema_article', 'add_citation_to_article_schema');


